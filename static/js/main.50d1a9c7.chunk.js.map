{"version":3,"sources":["components/ImageGalleryItem/ImageGalleryItem.module.css","components/Modal/Modal.module.css","components/Button/Button.module.css","components/ImageLoader/ImageLoader.module.css","components/ImageGallery/ImageGallery.module.css","components/Searchbar/Searchbar.module.css","components/Searchbar/Searchbar.js","components/ImageGalleryErrorView/ImageGalleryErrorView.js","components/ImageLoader/ImageLoader.js","components/Modal/Modal.js","components/ImageGalleryItem/ImageGalleryItem.js","components/ImageGallery/ImageGallery.js","components/Button/Button.js","components/services/images-api.js","components/ImageGalleryInfo/ImagesGalleryInfo.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Searchbar","onSubmit","useState","imageName","setImageName","className","s","SearchForm","e","preventDefault","trim","toast","info","type","SearchFormButton","SearchFormButtonLabel","value","onChange","currentTarget","toLowerCase","SearchFormInput","autoComplete","autoFocus","placeholder","ImageGalleryErrorView","message","role","ImageLoader","Loader","color","height","width","modalRoot","document","querySelector","Modal","src","alt","onClose","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","Overlay","onClick","target","ImageGalleryItem","largeImageUrl","showModal","setShowModal","toggleModal","ImageGalleryItemImage","ImageGallery","images","map","image","index","webformatURL","tags","largeImageURL","Button","ButtonDiv","scroll","scrollToBottom","api","fetchImages","name","page","fetch","then","response","ok","json","Promise","reject","Error","Status","ImagesGalleryInfo","setImages","error","setError","status","setStatus","setPage","imagesAPI","catch","hits","App","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.50d1a9c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGalleryItem\":\"ImageGalleryItem_ImageGalleryItem__2Ejix\",\"ImageGalleryItemImage\":\"ImageGalleryItem_ImageGalleryItemImage__2PtQR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Overlay\":\"Modal_Overlay__1e7nN\",\"Modal\":\"Modal_Modal__3gOO4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ButtonDiv\":\"Button_ButtonDiv__zyP2b\",\"Button\":\"Button_Button__2SKmh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Loader\":\"ImageLoader_Loader__25OFn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ImageGallery\":\"ImageGallery_ImageGallery__QEmce\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Searchbar\":\"Searchbar_Searchbar__327Rp\",\"SearchForm\":\"Searchbar_SearchForm__17UOB\",\"SearchFormButton\":\"Searchbar_SearchFormButton__209Q-\",\"SearchFormButtonLabel\":\"Searchbar_SearchFormButtonLabel__3fc_d\",\"SearchFormInput\":\"Searchbar_SearchFormInput__2wN9A\"};","import { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport s from './Searchbar.module.css'\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Searchbar({onSubmit}) {\r\n  const [imageName, setImageName] = useState('')\r\n\r\n   \r\n  const handleChange = e => {\r\n    \r\n    setImageName(e.currentTarget.value.toLowerCase())\r\n  }\r\n\r\n  const handleSubmit = e => {\r\n    \r\n    e.preventDefault();\r\n    if (imageName.trim() === '') {\r\n      toast.info('NO DATA.');\r\n      return\r\n    }\r\n    onSubmit(imageName);\r\n\r\n    setImageName('');\r\n    \r\n  }    \r\n  \r\n  \r\n    return (\r\n      <header className={s.Searchbar}>\r\n        <form className={s.SearchForm} onSubmit={handleSubmit}>\r\n          <button type=\"submit\" className={s.SearchFormButton}>\r\n           <span className={s.SearchFormButtonLabel}>Search</span>\r\n          </button>\r\n            <input\r\n            value={imageName}\r\n            onChange={handleChange}\r\n            className={s.SearchFormInput}\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search images and photos\"\r\n          />             \r\n        </form>\r\n      </header>\r\n    )\r\n  }\r\n\r\n\r\n\r\n  Searchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction ImageGalleryErrorView({ message }) {\r\n  return (\r\n    <div role=\"alert\">\r\n      <p>ERROR: {message}</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nImageGalleryErrorView.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryErrorView;","import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport s from './ImageLoader.module.css'\r\n\r\nexport default function ImageLoader() {\r\n  \r\n \r\n    return (\r\n      <Loader className={s.Loader} type=\"Audio\" color=\"#00BFFF\" height={80} width={80}\r\n        \r\n      />\r\n    );\r\n  }\r\n\r\n\r\n","import { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\nimport PropTypes from 'prop-types';\r\nimport s from './Modal.module.css'\r\n\r\nconst modalRoot = document.querySelector('#modal-root')\r\n\r\nexport default function Modal({ src, alt, onClose }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', handleKeyDown);\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = e => {\r\n    if (e.code === 'Escape') {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = e => {\r\n    if (e.currentTarget === e.target) {\r\n      onClose();\r\n    }\r\n  };\r\n        return  createPortal(\r\n                <div className={s.Overlay} onClick={handleBackdropClick}>\r\n                    <div className={s.Modal}>\r\n                        <img src={src} alt={alt}/>\r\n                    </div>\r\n            </div>, modalRoot)\r\n            \r\n        \r\n}\r\n    \r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n};\r\n","\r\nimport { useState } from 'react';\r\nimport s from './ImageGalleryItem.module.css'\r\nimport PropTypes from 'prop-types';\r\nimport Modal from '../Modal/Modal'\r\n\r\nexport default function ImageGalleryItem({ src, alt, largeImageUrl }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n  const toggleModal = () => {\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  \r\n    \r\n\r\n    return (\r\n      <li className={s.ImageGalleryItem}>\r\n        <img\r\n          onClick={toggleModal}\r\n          src={src}\r\n          alt={alt}\r\n          className={s.ImageGalleryItemImage}\r\n        />\r\n        {showModal && (\r\n          <Modal onClose={toggleModal} src={largeImageUrl} alt={alt} />\r\n        )}\r\n      </li>\r\n    );\r\n  }\r\n\r\n\r\nImageGalleryItem.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n    largeImageUrl: PropTypes.string.isRequired,\r\n  };\r\n\r\n","import PropTypes from 'prop-types';\r\nimport s from './ImageGallery.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem'\r\n\r\nfunction ImageGallery({images}) {\r\n  return (\r\n    <ul className={s.ImageGallery}>\r\n      {images.map((image, index) => (\r\n        <ImageGalleryItem\r\n          src={image.webformatURL}\r\n          alt={image.tags}\r\n          largeImageUrl={image.largeImageURL}\r\n          key={index}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n    \r\n} \r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n           \r\n    \r\n\r\n\r\n\r\n","import { animateScroll as scroll } from 'react-scroll';\r\nimport s from './Button.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Button({onClick}) {\r\n  \r\n\r\n  const scrollPage = () => {\r\n    onClick();\r\n      scroll.scrollToBottom();\r\n  };\r\n\r\n  \r\n    return (\r\n      <div className={s.ButtonDiv}>\r\n        <button onClick={scrollPage} className={s.Button} type=\"button\">\r\n        Load more\r\n      </button>\r\n      </div>\r\n      \r\n    );\r\n  }\r\n\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n    };\r\n\r\n","function fetchImages(name, page) {\r\n     const API_KEY = '19089587-d048225f5585fc89c8e323f31';\r\n    const BASE_URL = 'https://pixabay.com/api';\r\n  return fetch(\r\n    `${BASE_URL}/?q=${name}&page=1&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=${page*12}`,\r\n  ).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n\r\n    return Promise.reject(new Error('No response from server'));\r\n  });\r\n}\r\n\r\nconst api = {\r\n  fetchImages,\r\n}\r\n\r\nexport default api;\r\n\r\n","import { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ImageGalleryErrorView from '../ImageGalleryErrorView/ImageGalleryErrorView';\r\nimport ImageLoader from '../ImageLoader/ImageLoader';\r\nimport ImageGallery from '../ImageGallery/ImageGallery';\r\nimport Button from '../Button/Button';\r\nimport imagesAPI from '../services/images-api';\r\n\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nexport default function ImagesGalleryInfo({ imageName }) {\r\n  const [images, setImages] = useState([])\r\n  const [error, setError] = useState(null)\r\n  const [status, setStatus] = useState(Status.IDLE)\r\n  const [page, setPage] = useState(1)\r\n\r\n  \r\n  useEffect(() => {\r\n    if (!imageName) {\r\n      return;\r\n    }\r\n    \r\n    setStatus(Status.PENDING);\r\n\r\n    imagesAPI.fetchImages(imageName, page)\r\n      .then(images => {\r\n        setImages(images)\r\n        setStatus(Status.RESOLVED)\r\n        })\r\n      .catch(error => {\r\n        setError(error)\r\n      setStatus(Status.REJECTED)\r\n        });\r\n    \r\n }, [imageName, page])\r\n\r\n \r\n  const onClickLoadMore = () => {\r\n    setPage (page + 1)\r\n        \r\n    };\r\n \r\n    if (status === Status.IDLE) {\r\n      return <p>enter your request</p>;\r\n    }\r\n\r\n    if (status === Status.PENDING) {\r\n      return <ImageLoader />;\r\n    }\r\n\r\n    if (status === Status.REJECTED) {\r\n      return <ImageGalleryErrorView message={error.message} />;\r\n    }\r\n\r\n    if (status === Status.RESOLVED) {\r\n      return (\r\n        <>\r\n          <ImageGallery images={images.hits} />\r\n\r\n          <Button onClick={onClickLoadMore} />\r\n          </>\r\n      );\r\n    }\r\n  }\r\n\r\n\r\nImagesGalleryInfo.propTypes = {\r\n  imageName: PropTypes.string.isRequired,\r\n};\r\n\r\n\r\n\r\n","import { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Searchbar from './components/Searchbar/Searchbar'\nimport ImageGalleryInfo from './components/ImageGalleryInfo/ImagesGalleryInfo'\n\n\nexport default function App() {\nconst [imageName, setImageName] = useState('')\n  \n  \n  \n    return (\n      <>\n        <Searchbar onSubmit={setImageName} />\n\n        <ImageGalleryInfo imageName={imageName} />\n        <ToastContainer autoClose={3000} />\n      </>\n    );\n  }\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}